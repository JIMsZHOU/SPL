function [y1] = myNeuralNetworkFunction(x1)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 17-Mar-2017 00:47:15.
%
% [y1] = myNeuralNetworkFunction(x1) takes these arguments:
%   x = Qx8 matrix, input #1
% and returns:
%   y = Qx1 matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [0.075;0.055;0;0.002;0.001;0.0005;0.0015;1];
x1_step1.gain = [2.7027027027027;3.36134453781513;1.76991150442478;0.708340711882415;1.34498991257566;2.63331138907176;1.99302441454908;0.0714285714285714];
x1_step1.ymin = -1;

% Layer 1
b1 = [-1.545300516387487777;-1.1275376292849672577;0.94624756036958679317;0.90004752374765117917;0.36347694521201578954;-2.6172633118258730178;-1.3371197440691169334;1.0595931559363616081;-1.7515833085586451912;1.8629390189685532953];
IW1_1 = [0.98804800782923896119 -0.82117014903395646463 -0.66230800784947241322 0.17445258934547380747 0.86773880162016492346 0.9407809192555657285 0.40778555225264467854 0.54174631016975227649;0.30228498596590697156 0.59891900023573763079 -0.53953484932578299471 0.43131955132678101439 -0.15706614824642403661 -1.2415961775272854606 0.54642723658358471894 0.3543549886618031497;0.41340918946992066818 -0.36261441316798243006 0.10548493556064632293 -1.2236997907917948059 0.46888987359698924839 -0.64877424440096287395 -0.88872962785837938959 0.71802069618909358795;-0.64554821331676193186 0.93266187969474512176 0.78791853353022778261 0.22028767098859911022 1.0223336455671541145 -0.47492762550724110238 -0.045441092904903016003 0.2313227076007725036;-1.9797571553486070783 -0.3532219611406819948 0.64452365176961190496 0.41762454864565695667 -0.47730094945418777286 0.41276885277179931055 0.24065643016600068993 -1.3612458337950472664;0.50332576392138428378 0.32406480514605545684 1.3415420128125974397 -2.1720949795638020419 0.2852954456767557434 -1.8476515770021482155 0.17831998759598427506 -2.0391402853727322864;-0.61599012146558951297 -0.40688009403852604118 -0.54108612366319641662 0.34995874471193511024 1.0040147990637109388 -0.14173007757867589484 0.89328004381890990793 0.92818341577229501738;0.48474129164105805856 0.2036098145346628141 -0.48252154244389916515 -0.36378942628031984974 0.47909734700619632797 -0.73785291395268104431 -0.03406584032381744509 -1.214383880266562743;-0.60942350407719259042 0.47361240989818514935 0.06272630628463345126 -0.30108903425664240716 0.97429741394432511914 1.0494670844521989395 1.1466526922591537829 -0.42824738262173167591;0.79792304503044897412 -0.26009170072602583179 -0.10561203554145701111 0.086364749314448985285 0.023099526892991797261 -0.38070679856852296385 -0.42785839103715900267 -1.5172022116179775253];

% Layer 2
b2 = -0.092762519034365442661;
LW2_1 = [0.44419010790603119521 0.061381272936744696311 0.3871919888818297073 0.45174753599773709301 0.86153756767266320704 -1.5273196470499488253 0.50482483847331582894 0.92051897636492829857 -0.10285022700265117335 0.223584669213865328];

% ===== SIMULATION ========

% Dimensions
Q = size(x1,1); % samples

% Input 1
x1 = x1';
xp1 = mapminmax_apply(x1,x1_step1);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = repmat(b2,1,Q) + LW2_1*a1;

% Output 1
y1 = a2;
y1 = y1';
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end
